rules_version = '2';
service cloud.firestore {
  
  // Allow only authenticated content userUids access
  // then allows users to list tasks they've created
  // then allows users to create a task if they are authenticated
  // then allows users to delete a task if that task is owned by the user
  match /databases/{database}/documents {
    function isCreator() {
        return resource  != null
        		&& isLoggedIn() 
            && resource.data != null
            && request.auth.uid == resource.data.userUid;
      }

    function isLoggedIn() {
        return request.auth != null;
      }
    match /tasks/{task} {
      allow read, write: if isCreator();
      allow list: if isCreator();
      allow create: if isLoggedIn();
      allow delete: if isCreator();
    }
    
    function isUserInOrganization(organizationResource) {
      return true
      && organizationResource.data.UserUids != null
      && request.auth.uid in organizationResource.data.UserUids
    }
    match /organizations/{organization} {
      allow read: if isUserInOrganization(resource);
      allow write: if isUserInOrganization(resource); 
      allow delete: if isUserInOrganization(resource);
      allow create: if isLoggedIn();
    }
    match /exposureGroups/{exposureGroup} {
      allow read, write, delete: if resource.data != null
                 && resource.data.organizationUid != null
                 && isUserInOrganization(get(/databases/$(database)/documents/organizations/$(resource.data.OrganizationUid)))
      allow create: if isLoggedIn();
    }
    match /breakdownTask/{task} {
      allow read, write: if isCreator();
      allow list: if isCreator();
      allow create: if isLoggedIn();
      allow delete: if false;
    }
    match /* {
      allow read, write: if false;
      allow list: if false;
      allow create: if false;
      allow delete: if false;
    }
  }

  
}